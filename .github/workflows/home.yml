name: Main pages

on:   
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run -> home, about, blog, museum, cv'
        required: true
        default: 'all'
jobs:
  home:
    name: Build page_home
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'home' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "page_main"
      BASEFOLDER: "main"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest

  about:
    name: Build page_about
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'about' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "page_about"
      BASEFOLDER: "about"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest

  blog:
    name: Build page_blog
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'blog' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "page_blog"
      BASEFOLDER: "blog"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest

  museum:
    name: Build page_museum
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'museum' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "page_museum"
      BASEFOLDER: "fractals_museum"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest

  cv:
    name: Build page_cv
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'cv' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "page_cv"
      BASEFOLDER: "cv"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
