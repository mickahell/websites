name: Games

on:   
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run -> page, qpokemon, qnim'
        required: true
        default: 'all'
jobs:
  page:
    name: Build page_games
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'page' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "page_games"
      PATH_FOLDER: "streamlit"
      BASEFOLDER: "games"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/${{ env.PATH_FOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
        
  qpokemon:
    name: Build qpokemon
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'qpokemon' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "qpokemon_games"
      PATH_FOLDER: "qpokemon-fight"
      BASEFOLDER: "games"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/${{ env.PATH_FOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
        
  qnim:
    name: Build qnim
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'qnim' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "qnim_games"
      PATH_FOLDER: "qnim-game"
      BASEFOLDER: "games"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/${{ env.PATH_FOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME }}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
