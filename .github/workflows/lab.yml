name: Quantum Lab

on:   
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run -> page, qiskit, pennylane, cirq'
        required: true
        default: 'all'
jobs:
  page:
    name: Build page_lab
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'page' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "page_lab"
      PATH_FOLDER: "streamlit"
      BASEFOLDER: "quantum_lab"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --file ${{ env.BASEFOLDER }}/${{ env.PATH_FOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME}}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
        
  qiskit:
    name: Build qiskit
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'qiskit' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: "qiskit_lab"
      PATH_FOLDER: "jupyter"
      BASEFOLDER: "quantum_lab"
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: docker build . --build-arg --file ${{ env.BASEFOLDER }}/${{ env.PATH_FOLDER }}/Dockerfile --tag ${{ env.IMAGE_NAME }}:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/${{ env.IMAGE_NAME}}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag ${{ env.IMAGE_NAME }} $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
