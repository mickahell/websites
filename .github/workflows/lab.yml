name: Quantum Lab

on:   
  workflow_dispatch:
    inputs:
      job:
        description: 'Job to run -> page, qiskit, pennylane, cirq'
        required: true
        default: 'all'
jobs:
  page:
    name: Build page_lab
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'page' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - name: Set vars env
      env:
        IMAGE_NAME: "page_lab"
    - name: Build image
      run: docker build . --file quantum_lab/streamlit/Dockerfile --tag $IMAGE_NAME:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/$IMAGE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag $IMAGE_NAME $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
        
  qiskit:
    name: Build qiskit
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'qiskit' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - name: Set vars env
      env:
        IMAGE_NAME: "qiskit_lab"
    - name: Build image
      run: docker build . --build-arg LAB_ENV=qiskit --file quantum_lab/jupyter/Dockerfile --tag $IMAGE_NAME:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/$IMAGE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag $IMAGE_NAME $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
        
  pennylane:
    name: Build pennylane
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'pennylane' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - name: Set vars env
      env:
        IMAGE_NAME: "qml_lab"
    - name: Build image
      run: docker build . --build-arg LAB_ENV=qml --file quantum_lab/jupyter/Dockerfile --tag $IMAGE_NAME:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/$IMAGE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag $IMAGE_NAME $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
        
  cirq:
    name: Build cirq
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.job == 'cirq' || github.event.inputs.job == 'all' }}
    permissions:
      packages: write
      contents: read
    steps:
    - uses: actions/checkout@v2
    - name: Set vars env
      env:
        IMAGE_NAME: "cirq_lab"
    - name: Build image
      run: docker build . --build-arg LAB_ENV=cirq --file quantum_lab/jupyter/Dockerfile --tag $IMAGE_NAME:latest
    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/xtraorbitals/$IMAGE_NAME
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        docker tag $IMAGE_NAME $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
